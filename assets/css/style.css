.hidden {
  display: none;
}

html {
  position: relative;
  min-height: 100%;
}
body {
  /* Margin bottom by footer height */
  margin-bottom: 25px;
}

body :focus {
  outline: none;
}

* h1 {
  font-size: 30
}

* h1 small { 
  line-height: 1.3;
}

* h2 {
  font-size: 24
}

* h3 {
  font-size: 18
}

* h4 {
  font-size: 14
}

* h5 {
  font-size: 12
}

* h6 {
  font-size: 10
}


.footer {
  position: absolute;
  bottom: 4;
  width: 100%;
  /* Set the fixed height of the footer here */
  height: 25px;
  color: #5e5e5e;
  background-color: #f5f7fa;
}
.footer p {
  font-size: 0.75em;
  margin-top: 5px;
  text-align: center;
}


.nav-pills > li.active > a, .nav-pills > li.active > a:hover, .nav-pills > li.active > a:focus {
  color: #5e5e5e;
  background-color: #b8c6db;
}
.nav-pills > li > a {
  border-radius: 0px;
}

.ag-row:hover {
  cursor: hand;
}

/* When you click on AG grid rows it highlights the cell for somereason */
.ag-theme-material .ag-cell:focus {
  outline: none;
}
.ag-theme-material .ag-cell-focus {
  border: none !important;
  outline: initial;
}

.ag-theme-material .question-row-is-owned {
  background-color: #f5f7fa !important;
}

.ag-theme-material .question-row-is-unowned {
  background-color: #fff !important;
}

/* .ag-theme-material .ag-cell {
  padding-left: 0px;
  padding-right: 0px;
}
*/
.no-padding {
  padding: 0px !important;
  text-align: center;
}
.ag-header-cell-text {
  flex: 1;
}

.close-button {
  margin-right: 10px;
  margin-top: 10px;
  font-size: 16px;
  text-shadow: #f3f3f3 1px 1px 1px;
  color: #3c3c3c;
  cursor: pointer;
}
.close-button:hover {
  color: #000;
}

/* Tooltip for vis.js Network Graphs */
div.vis-tooltip {
  position: absolute;
  padding: 20px;
}
div.vis-tooltip-inner {
  margin: 0px;
  padding: 7px 10px 10px 10px;
  border: 1px solid #444;
  border-radius: 8px;
  background-color: rgba(0, 0, 0, 0.85);
  box-shadow: 2px 2px 5px 0px #444;
  font-family: sans-serif;
  font-size: 0.9em;
  color: #eee;
}
div.vis-tooltip .invalid-node {
  background-color: rgba(134, 0, 0, 0.85);
}
.vis-tooltip span.title {
  color:#60adec;
  font-weight: bolder;
  font-size: 1.2em;
}
.vis-tooltip .field-name {
  font-weight: bold;
  padding-right: 5px;
}

#answersetSelect .Select-value {
  line-height: 20px;
} 
#answersetSelect .Select-input {
  height: 20px;
}
#answersetSelect .Select-control {
  height: 20px;
} 

#QuestionInput {
  font-size: 22;
}

#QuestionInput .Select-input > input {
  padding: 4px 0 12px;
}

.pretty-json-container svg {
  vertical-align: inherit !important;
}

/* Default Bootstrap Panel color */
.panel-default > .panel-heading {
  color: #333;
  background-color: #f5f7fa;/*#f5f5f5;*/
  border-color: #ddd;
}

/* A dropdown that doesn't look like a button */
#diminisheddropdown {
  border: none;
  color: #aaa;
}
#diminisheddropdown:hover, #diminisheddropdown:active, #diminisheddropdown:focus {
  background-color: inherit;
  color:  #aaa;
}

/* To enable contained modals */
.modal-container {
  position: relative;
}
.modal-container .modal, .modal-container .modal-backdrop {
  position: absolute;
}

.fadeout {
  pointer-events: none;
  position: relative; 
  bottom: 3em;
  height: 3em;
  background: -webkit-linear-gradient(
      rgba(255, 255, 255, 0) 0%,
      rgba(255, 255, 255, 1) 100%
  ); 
  background-image: -moz-linear-gradient(
      rgba(255, 255, 255, 0) 0%,
      rgba(255, 255, 255, 1) 100%
  );
  background-image: -o-linear-gradient(
      rgba(255, 255, 255, 0) 0%,
      rgba(255, 255, 255, 1) 100%
  );
  background-image: linear-gradient(
      rgba(255, 255, 255, 0) 0%,
      rgba(255, 255, 255, 1) 100%
  );
  background-image: -ms-linear-gradient(
      rgba(255, 255, 255, 0) 0%,
      rgba(255, 255, 255, 1) 100%
  );
}

#bionames .form-control:focus {
  border-color: #ccc;
  -webkit-box-shadow: none;
  box-shadow: none;
}

/* Form Validation Color for MultiSelect component from react-widgets*/
.rw-widget-container.valid {
  border-color: #3c763d;
}
.rw-widget-container.invalid {
  border-color: #a94442;
}

/* Remove bold control labels */
.form-horizontal label {
  font-weight: normal;
}

/* Custom tweak to Bootstrap tabs */
.nav-tabs > li > a {
  border: 1px solid #ededed;
  border-bottom-color: transparent;
}

.nav > li.disabled > a {
  color: #999;
  background-color: #eee;
}

/* Custom "icon-spin" class that spins the icon 360 degrees */
.icon-spin {
  -webkit-animation: icon-spin 2s infinite linear;
          animation: icon-spin 2s infinite linear;
}

@-webkit-keyframes icon-spin {
  0% {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(359deg);
            transform: rotate(359deg);
  }
}

@keyframes icon-spin {
  0% {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(359deg);
            transform: rotate(359deg);
  }
}

/* Widen modal for Graph JSON editor */
.question-editor-modal {
  width: 80%;
}

.popover {
  max-width: 600px;
}

/* .question-editor-modal .modal-content, .machine-question-editor {
  height: calc(100vh - 100px);
} */

/* ##### START: React-table custom styling ##### */
.ReactTable .-pagination .-btn {
  height: auto; /* Default of 100% makes buttons in footer really large */
}
/* Fix header alignment with body when scrollbar enabled
.ReactTable .rt-thead {
  overflow-y: scroll;
}
.ReactTable .rt-thead::-webkit-scrollbar {
 background: transparent; 
}
*/
/* Style column alignment in table by specifying class: 'center', etc */
.rt-td.center {
  text-align: center;
}
.rt-td.left {
  text-align: left;
}
.rt-td.right {
  text-align: right;
}
.rt-tr.selected-row { /* Highlight selected row */
  background-color: #ebebeb;
}
/* ##### END: React-table custom styling ##### */

/* Vertically align icons and text in buttons */
.valign-center {
  display: inline-flex;
  vertical-align: middle;
  align-items: center;
}

/* Task Modal CSS */
.modal-dialog {
  width: 70%;
}
.taskListTask {
  cursor: pointer;
}
.taskListTask:hover {
  background-color: lightgrey;
}
.taskListTask.active {
  background-color: lightsteelblue;
}
button.taskListTask {
  padding: 0;
}
.taskListItem {
  width: 20%;
  display: inline-block;
  text-align: center;
  border: 1px solid black;
  height: 100%;
}
.logButton {
  float: right;
  position: relative;
  top: -35px;
  cursor: pointer;
  margin: 0px 10px;
}
/* Show filter dropdown in React Table component */
.ReactTable .rt-th {
  overflow: visible;
}
#answerDropdown {
  position: absolute;
}
.rw-popup-container {
  min-width: 300px;
}

.answersetFilter {
  min-width: 30%;
  max-width: 50%;
  max-height: 30%;
  overflow: scroll;
  padding: 10px;
  background-color: white;
  z-index: 10;
}
.answersetFilter hr {
  margin: 0;
}

#questionTempButton:disabled {
  cursor: not-allowed;
  background-color: #eee;
}
/* Submit button on api pages. greyed out when disabled. */
#submitAPI:disabled {
  cursor: not-allowed;
  background-color: #eee;
}

.curieSelectorInput:focus {
  border: 1px solid black !important;
}

/* Contingency table and stats in edge explorer */
.ctngcyTableContainer {
  overflow: auto;
}
.ctngcyStatsPanel {
}
.ctngcyTable {
  border: 0 solid;
  text-align: center;
  width: 100%;
}

.ctngcyCell, .ctngcyColumnFinish, .ctngcyRowFinish, .ctngcyTableFinish,
.ctngcyRowHeader, .ctngcyColumnHeader {
  padding: 6px;
  border: 1px solid black;
  text-align: center;
  color: #000000;
}
.ctngcyCellInner {
  width: 100%;
  table-layout: fixed;
}
.ctngcyColumnHeader {
  border-width: 0 1px 1px 1px;
}
.ctngcyRowHeader {
  border-width: 1px 1px 1px 0;
}
.ctngcyColumnFinish {
  border-width: 1px 0 1px 1px;
}
.ctngcyRowFinish {
  border-width: 1px 1px 0 1px;
}
.ctngcyTableFinish {
  border-width: 1px 0 0 1px;
}